---
- name: Update Proxmox and VMs
  hosts: all
  vars_files: "{{ playbook_dir }}/vars/patching_vars.yml"
  strategy: linear
  tasks:
    - name: Update system packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
      become: true
      when: '"virtual_servers" in group_names'

    - name: Pull latest container images
      community.docker.docker_compose_v2_pull:
        project_src: "/home/{{ ansible_user }}"
      when: "'container_host' in group_names"

    - name: Stop containers
      community.docker.docker_compose_v2:
        project_src: "/home/{{ ansible_user }}"
        state: stopped
      when: "'container_host' in group_names"

    - name: Update Proxmox packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
      when: '"proxmox" in group_names'

    - name: Shutdown virtual servers - LXC
      community.general.proxmox:
        vmid: "{{ item }}"
        node: "{{ proxmox_node }}"
        api_user: "{{ proxmox_api_user }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_host: "{{ proxmox_api_host }}"
        state: stopped
      loop: "{{ proxmox_vmids_lxc }}"
      delegate_to: localhost
      run_once: true

    - name: Shutdown virtual servers - KVM
      community.general.proxmox_kvm:
        vmid: "{{ item }}"
        node: "{{ proxmox_node }}"
        api_user: "{{ proxmox_api_user }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_host: "{{ proxmox_api_host }}"
        timeout: 600
        state: stopped
      loop: "{{ proxmox_vmids_kvm }}"
      delegate_to: localhost
      run_once: true

    - name: Reboot Proxmox server
      ansible.builtin.reboot:
      when: '"proxmox" in group_names'

    - name: Wait for all container hosts to be available
      ansible.builtin.wait_for:
        host: "{{ hostvars[item]['ansible_host'] }}"
        port: "{{ container_host_ssh_port }}"
        state: started
        delay: 10
        timeout: 300
      loop: "{{ groups['container_host'] }}"
      delegate_to: localhost

    - name: Start containers
      community.docker.docker_compose_v2:
        project_src: "/home/{{ ansible_user }}"
        state: present
      when: "'container_host' in group_names"
